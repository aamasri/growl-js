{"version":3,"sources":["webpack:///./src/growl.js"],"names":["growlMessageCount","async","growl","options","undefined","window","jQuery","default","anime","domUtils","string","message","length","decodeURIComponent","replace","type","duration","overwrite","messageLength","$body","icon","durationMultiplier","$target","target","onTop","onTopZIndex","$growlBox","targetSpace","positionVisible","targetOffset","offset","growlOffset","top","left","targetId","prop","$existingGrowl","append","appendTo","improveGrowlAspectRatio","last","find","text","remove","outerHeight","closeGrowl","prepend","$bubbles","$largeBubble","$smallBubble","first","bubbleSize","Math","sqrt","outerWidth","css","targets","toArray","opacity","value","OFFSET","GROWL_WIDTH","WINDOW_WIDTH","width","right","leftOffset","addClass","bottom","on","$growlNoticeboard","isVisible","children","each","this","empty","$progressBar","easing","complete","durationMs","autoCloseGrowl","evt","scale","finished","popupGrowl","aspectRatio","height","$element","closest"],"mappings":"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","file":"chunk_growl.js","sourcesContent":["/*\n * growl.js 1.0.7\n * (c) 2020 Ananda Masri\n * Released under the MIT license\n * auroraweb.ca/giving-back/growl\n */\n\nimport './growl.styl';\n\n// module scope vars\nconst debug = false;\nlet growlMessageCount = 0;\n\n\n/* launches a popup notification with options\n *\n * options object\n * \t\tmessage: \t\t[STRING] \t\t\tthe (HTML) message content to display\n * \t\ttype:\t\t\t[STRING] \t\t\t(optional) the type of message ie. success, error, warning, info (default)\n * \t\ttarget: \t\t[STRING] \t\t\t(optional) target element (DOM element, css selector string, or jQuery object) to attach the growl notification, else will be appended to #growlNoticeboard\n * \t\tduration:\t\t[NUMBER] \t\t\t(optional) how long the message is displayed (in seconds). 0 implies forever (ie dismissed by end-user).  Default: automatic\n * \t\toverwrite:\t\t[BOOLEAN]  \t\t\t(optional) make this growl message replace any existing message on the specified target\n *\n *\n * @param {Object.<string, {\n *      message: string,\n *      type: string\n *      target: string | undefined,\n *      duration: number | undefined,\n *      overwrite: boolean | undefined,\n *\n * }>} options\n *\n * @returns {void}\n */\nexport default async function growl(options) {\n    // lazy load of dependencies\n    if (window.jQuery === undefined) {\n        window.jQuery = await import(/* webpackChunkName: \"jquery\" */ 'jquery');\n        window.jQuery = window.jQuery.default;\n    }\n\n    if (debug) console.log('checking window.jQuery loaded', window.jQuery);\n\n    if (window.anime === undefined) {\n        window.anime = await import(/* webpackChunkName: \"anime\" */ 'animejs/lib/anime.es.js');\n        window.anime = window.anime.default;\n    }\n\n    const domUtils = await import(/* webpackChunkName: \"dom-utils\" */ './dom-utils');\n\n    if (debug) console.log('checking window.anime loaded', window.anime);\n\n    options = options || {};\n\n    // warn if no message supplied\n    if (typeof options.message !== 'string' || !options.message.length) {\n        options.message = 'Missing message content!';\n        options.type = 'error';\n        options.duration = 0;   // persistent (provides a means to examine the growl DOM)\n    } else\n        options.message = decode(options.message);\n\n    options.overwrite = options.overwrite || false;\n    const messageLength = options.message.length;\t// before message includes icon\n    growlMessageCount++;\n    const $body = jQuery('body');\n\n    // select icon for known message types\n    let icon, durationMultiplier;\n    switch (options.type) {\n        case 'success':\n            icon = `<svg class=\"icon text-success\" viewBox=\"0 0 172 172\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\">\n                        <path d=\"M0,172v-172h172v172z\" fill=\"none\"/>\n                        <path d=\"M86,17.2c-37.9948,0 -68.8,30.8052 -68.8,68.8c0,37.9948 30.8052,68.8 68.8,68.8c37.9948,0 68.8,-30.8052 68.8,-68.8c0,-37.9948 -30.8052,-68.8 -68.8,-68.8zM124.45347,72.85347l-43.344,43.344c-1.07787,1.07787 -2.53413,1.67987 -4.05347,1.67987c-1.51933,0 -2.98133,-0.602 -4.05347,-1.67987l-19.7972,-19.7972c-2.24173,-2.24173 -2.24173,-5.8652 0,-8.10693c2.24173,-2.24173 5.8652,-2.24173 8.10693,0l15.74373,15.74373l39.29053,-39.29053c2.24173,-2.24173 5.8652,-2.24173 8.10693,0c2.24173,2.24173 2.24173,5.8652 0,8.10693z\"/>\n                    </svg>`;\n            durationMultiplier = 30;\n            break;\n\n        case 'danger':\n        case 'error':\n            icon = `<svg class=\"icon text-danger\" viewBox=\"0 0 172 172\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\">\n                        <path d=\"M0,172v-172h172v172z\" fill=\"none\"/>\n                        <path d=\"M86,14.33333c-39.5815,0 -71.66667,32.08517 -71.66667,71.66667c0,39.5815 32.08517,71.66667 71.66667,71.66667c39.5815,0 71.66667,-32.08517 71.66667,-71.66667c0,-39.5815 -32.08517,-71.66667 -71.66667,-71.66667zM114.66667,111.08333c0,9.89717 -8.0195,17.91667 -17.91667,17.91667h-15.0715c-4.37167,0 -8.31333,-1.68417 -11.34483,-4.37167l-0.5805,-0.48017c-0.13617,-0.129 -0.27233,-0.26517 -0.40133,-0.40133l-24.50283,-24.50283c-1.01767,-1.01767 -1.01767,-2.68033 0,-3.698v0c3.17483,-3.17483 8.32767,-3.17483 11.5025,0l8.1485,8.1485v-49.9445c0,-1.978 1.60533,-3.58333 3.58333,-3.58333v0c1.978,0 3.58333,1.60533 3.58333,3.58333v21.5c0,1.978 1.60533,3.58333 3.58333,3.58333v0c1.978,0 3.58333,-1.60533 3.58333,-3.58333v-28.66667c0,-1.978 1.60533,-3.58333 3.58333,-3.58333v0c1.978,0 3.58333,1.60533 3.58333,3.58333v28.66667c0,1.978 1.60533,3.58333 3.58333,3.58333v0c1.978,0 3.58333,-1.60533 3.58333,-3.58333v-28.66667c0,-1.978 1.60533,-3.58333 3.58333,-3.58333v0c1.978,0 3.58333,1.60533 3.58333,3.58333v28.66667c0,1.978 1.60533,3.58333 3.58333,3.58333v0c1.978,0 3.58333,-1.60533 3.58333,-3.58333v-14.33333c0,-1.978 1.60533,-3.58333 3.58333,-3.58333v0c1.978,0 3.58333,1.60533 3.58333,3.58333z\"/>\n                    </svg>`;\n            durationMultiplier = 60;\n            break;\n\n        case 'warning':\n            icon = `<svg class=\"icon text-warning\" viewBox=\"0 0 172 172\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\">\n                        <path d=\"M0,172v-172h172v172z\" fill=\"none\"/>\n                        <path d=\"M167.29688,133.1863l-66.51563,-115.20072c-8.14003,-14.08353 -21.42247,-14.08353 -29.5625,0l-66.51562,115.20072c-8.14003,14.08353 -1.47296,25.58293 14.78125,25.58293h133.03125c16.25421,0 22.89543,-11.4994 14.78125,-25.58293zM76.85217,50.67488c2.40324,-2.58413 5.42668,-3.8762 9.14783,-3.8762c3.72115,0 6.74459,1.26622 9.14784,3.82452c2.35156,2.53245 3.5661,5.73678 3.5661,9.58714c0,3.28185 -4.96154,27.57271 -6.61538,45.22235h-11.96454c-1.44712,-17.64964 -6.84796,-41.94051 -6.84796,-45.22235c0,-3.79868 1.21454,-6.97717 3.56611,-9.53546zM94.96695,134.65926c-2.50661,2.42908 -5.50421,3.66947 -8.96695,3.66947c-3.46274,0 -6.46033,-1.24038 -8.96695,-3.66947c-2.50661,-2.45493 -3.74699,-5.40084 -3.74699,-8.88942c0,-3.46274 1.24038,-6.46034 3.74699,-8.96695c2.50662,-2.50661 5.50421,-3.74699 8.96695,-3.74699c3.46274,0 6.46034,1.24038 8.96695,3.74699c2.50661,2.50661 3.74699,5.50421 3.74699,8.96695c0,3.48858 -1.24038,6.43449 -3.74699,8.88942z\"/>\n                    </svg>`;\n            durationMultiplier = 50;\n            break;\n\n        default:\n            icon = `<svg class=\"icon text-info\" viewBox=\"0 0 172 172\" xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\">\n                        <path d=\"M0,172v-172h172v172z\" fill=\"none\"/>\n                        <path d=\"M86,6.88c-43.69832,0 -79.12,35.42168 -79.12,79.12c0,43.69832 35.42168,79.12 79.12,79.12c43.69832,0 79.12,-35.42168 79.12,-79.12c0,-43.69832 -35.42168,-79.12 -79.12,-79.12zM86,37.84c5.70008,0 10.32,4.61992 10.32,10.32c0,5.70008 -4.61992,10.32 -10.32,10.32c-5.70008,0 -10.32,-4.61992 -10.32,-10.32c0,-5.70008 4.61992,-10.32 10.32,-10.32zM99.76,130.72h-6.88h-13.76h-6.88v-6.88h6.88v-44.72h-6.88v-6.88h6.88h13.76v6.88v44.72h6.88z\"/>\n                    </svg>`;\n            options.type = 'info';\n            durationMultiplier = 40;\n    }\n\n    // merge icon into message content\n    options.message = icon + '</span><div class=\"message\">' + options.message + '</div><div style=\"clear:both;\"></div>';\n\n    // convert target (selector, DOM element, or jQuery object) to jQuery object\n    const $target = jQuery(options.target);\n    const onTop = domUtils.onTopZIndex();\n\n    let $growlBox;\n\n    // setup growl target location (where messages will appear)\n    if ($target.length) {\n        const targetSpace = domUtils.positionVisible($target);\n        const targetOffset = $target.offset();\n        let growlOffset = {};\n\n        // if target is not visible in the viewport (due to scroll position) then display growl on the growl noticeboard\n        if (targetSpace.top < 0 || targetSpace.left < 0) {\n            options.target = false;\n        } else {\n            // position growl relative to specified target element\n\n            // determine the growl id for this target\n            let targetId = 'growl-' + $target.prop('id');\t\t// the growl prefix avoids collision with assignValue() server calls\n            targetId = (targetId) ? targetId : 'noTargetId';\n\n            // get any existing growl associated with this target (before creating the new one)\n            let $existingGrowl = jQuery('div.growlBox.' + targetId);\n\n            // create the new growl message box & insert the growl message content - position:relative allows content to show on top of bubbles\n            $growlBox = jQuery('<div id=\"growlBox' + growlMessageCount + '\" class=\"growlBox '+targetId+' '+options.type+'\" style=\"position:absolute;\"></div>');\n            $growlBox.append('<div class=\"content\" style=\"position:relative; word-wrap:break-word;\">'+options.message+'</div>');\n            $growlBox.appendTo($body);\n\n\n            improveGrowlAspectRatio($growlBox);\n\n            // existing growl message for the specified target - if so position this message imediately under existing message (or replace if \"overwrite\" option set)\n            if (targetId !== 'noTargetId' && $existingGrowl.length && !options.overwrite) {\n                $existingGrowl = $existingGrowl.last();\n                // don't show the same message again\n                if ($existingGrowl.find('div.message').text() === $growlBox.find('div.message').text()) {\n                    $growlBox.remove();\n                    // console.info('second growl with same target id ('+targetId+') suppressed.' );\n                    return;\n                }\n                // position this message immediately under existing message\n                growlOffset = $existingGrowl.offset();\n                growlOffset.top += $existingGrowl.outerHeight() + 15;\n            } else {\n                // no existing growl message for specified target or overwrite mode set\n                if ($existingGrowl.length && options.overwrite)\n                    closeGrowl($existingGrowl);\n\n                // insert the thought bubbles - not essential but nice touch\n                $growlBox.prepend('<div class=\"bubble\"><div class=\"bubble\"></div></div>');\n                const $bubbles = $growlBox.find('div.bubble');\n                const $largeBubble = $bubbles.last();\n                const $smallBubble = $bubbles.first();\n                const bubbleSize = Math.sqrt($growlBox.outerHeight() * $growlBox.outerWidth()) / 4;\n                $largeBubble.css({'width':bubbleSize, 'height':bubbleSize, 'border-radius':bubbleSize/2 });\n                $smallBubble.css({'width':bubbleSize/2, 'height':bubbleSize/2, 'border-radius':bubbleSize/4 });\n\n                // chain animate bubbles & growl box so that they appear one after another\n                anime({\n                    targets: $bubbles.toArray(),\n                    opacity: [\n                        { value: [ 0, 1 ], duration: 1500 },\n                    ]\n                });\n\n                const OFFSET = 20;\n                const GROWL_WIDTH = $growlBox.outerWidth();\n                const WINDOW_WIDTH = jQuery(window).width();\n\n                // move the growl box over the specified target (but ensure message display inside the browser visible area)\n                if (targetSpace.right > targetSpace.left) {\n                    // more space on the right of the target\n                    $smallBubble.css('left', '-20px');\n                    $largeBubble.css('left', '5px');\n                    let leftOffset = targetOffset.left + $target.outerWidth() + OFFSET;\n                    growlOffset.left = ((WINDOW_WIDTH - leftOffset) < GROWL_WIDTH) ? leftOffset - GROWL_WIDTH : leftOffset;\n                    $growlBox.addClass('right');\n                    $growlBox.css('margin', '0 10px 0 0');\n                } else {\n                    // show growl to left of target\n                    $smallBubble.css('left', GROWL_WIDTH + 'px');\n                    $largeBubble.css('left', - bubbleSize/1.5 + 'px');\n                    let leftOffset = targetOffset.left - GROWL_WIDTH - OFFSET;\n                    growlOffset.left = (leftOffset < OFFSET) ? OFFSET : leftOffset;\n                    $growlBox.addClass('left');\n                    $growlBox.css('margin', '0 0 0 10px');\n                }\n                if (targetSpace.top > targetSpace.bottom) {\n                    // more space above target)\n                    $smallBubble.css('top', $growlBox.outerHeight() + 'px');\n                    $largeBubble.css('top', -bubbleSize/1.5 + 'px');\n                    growlOffset.top = targetOffset.top - $growlBox.outerHeight() - OFFSET;\n                    $growlBox.addClass('above');\n                } else {\n                    // show growl below target\n                    $largeBubble.css('top', '5px');\n                    $smallBubble.css('top', '-20px');\n                    growlOffset.top = targetOffset.top + $target.outerHeight() + OFFSET;\n                    $growlBox.addClass('below');\n                }\n            }\n\n            // apply the calculated position & z-index to the new growl message\n            $growlBox.css({ 'top': growlOffset.top + 'px', 'left': growlOffset.left + 'px', 'z-index': onTop });\n\n            // remove the growl box if it's target element disappears\n            $target.on('remove', function () {\n                if (!$target.length)\n                    closeGrowl($growlBox);\n            });\n        }\n    } else {\n        // no specified target or specified target is scrolled outside the viewport\n        let $growlNoticeboard = jQuery('#growlNoticeboard');\n\n        // no target element specified - display the message on the growl noticeboard\n        if (!$growlNoticeboard.length) {\n            $growlNoticeboard = jQuery('<div id=\"growlNoticeboard\"></div>').appendTo($body);\n\n            // if $growlNoticeboard is not visible in the viewport then position it in top/right corner\n            if (!domUtils.isVisible($growlNoticeboard))\n                $growlNoticeboard.css({ 'top':'10px', 'right':'10px' });\n        }\n\n        // create the growl box\n        if (options.overwrite) {\n            $growlNoticeboard.children('div.growlBox').each(function() {\n                closeGrowl(this);\n            });\n            $growlNoticeboard.empty();\n        }\n\n        $growlNoticeboard.css('z-index', onTop);\t// position noticeboard on top\n\n        // create growl, it's message content and append it to noticeboard\n        $growlBox = jQuery('<div id=\"growlBox' + growlMessageCount + '\" class=\"growlBox '+options.type+'\" style=\"position:relative;\"></div>');\n        $growlBox.append('<div class=\"content\" style=\"position:relative; word-wrap:break-word;\">'+options.message+'</div>');\n        $growlBox.appendTo($growlNoticeboard);\n\n        improveGrowlAspectRatio($growlBox);\n    }\n\n\n    // normalize growl message duration in mS\n    switch (options.duration) {\n        case false:\n        case 'false':\n        case 0:\n        case '0':\n            options.duration = 0;\t\t// user must dismiss the growl manually\n            break;\n\n        case undefined:\n        case 'undefined':\n            options.duration = 1000 + (messageLength * durationMultiplier);\t// auto duration based on message length\n            break;\n\n        default:\n            options.duration *= 1000;\t// seconds ---> ms\n            break;\n    }\n\n\n    // add a countdown display (only if the message has a finite duration and will be around for a while)\n    if (options.duration !== 0 && options.duration >= 2000) {\n        $growlBox.append('<div class=\"progress\" style=\"width:99%\"></div>');\n\n        // force growl box to enclose floated elements like the countdown and the disable tutorial button\n        $growlBox.append('<div style=\"clear:both\"></div>');\n\n        const $progressBar = $growlBox.find('.progress');\n\n        // animate progress bar\n        anime({\n            targets: $progressBar[0],\n            width: 0,\n            easing: 'linear',\n            duration: options.duration,\n            complete: function() {\n                $progressBar.remove();\n            },\n        });\n    }\n\n    await popupGrowl($growlBox, options.duration);\n}\n\n\n\n\n// improve growl box aspect ratio\nfunction improveGrowlAspectRatio($growlBox) {\n    const $message = $growlBox.find('.message');\n\n    let width = $growlBox.width();\n    const height = $growlBox.height();\n    const aspectRatio = width / height;\n    if (debug) console.debug(`growl box has a width of ${width} and aspect ratio of ${aspectRatio}`);\n\n    if (width > 250 && aspectRatio > 3) {\n        width = width * 1.5 / Math.sqrt(aspectRatio);\n        $growlBox.width(width);\n        if (debug) console.debug(`squared up growl box width`, $message.css('width'));\n    }\n}\n\n\n\n\n\nasync function popupGrowl($growlBox, durationMs) {\n    const easeInDuration = 400;\n    const autoCloseGrowl = !!durationMs;\n    durationMs = (durationMs && durationMs > 1000) ? durationMs - easeInDuration : 1000;\n\n    // close on click on growl message\n    $growlBox.on('click', function(evt) {\n        closeGrowl(evt.target);\n    });\n\n    // popup animation followed by message duration delay\n    await anime({\n            targets: $growlBox[0],\n            opacity: [\n                { value: [ 0, 1 ], duration: easeInDuration },\n            ],\n            scale: [\n                { value: [ 0, 1 ], duration: easeInDuration },\n                { value: 1, duration: durationMs },\t// delay growl removal\n            ],\n            easing: 'easeOutElastic(1, 0.6)'\n    }).finished;\n\n    if (autoCloseGrowl && !debug)\n        closeGrowl($growlBox);\n}\n\n\n\nfunction closeGrowl($element) {\n    $element = jQuery($element);\n    const $growlBox = $element.closest('div.growlBox');\n\n    // remove the growl message\n    anime({\n        targets: $growlBox[0],\n        opacity: 0,\n        easing: 'easeOutExpo',\n        duration: 700,\n        complete: function() {\n            $growlBox.remove();\n        },\n    });\n}\n\n\n\n// this function is compatible with php's urlencode (use this instead of decodeURIComponent)\nfunction decode(string) {\n    return decodeURIComponent(string.replace(/%2526/g, '&').replace(/%2520/g, ' ').replace(/%252520/g, ' ').replace(/\\n/g, '<br>'));\n}\n\n"],"sourceRoot":""}